plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.ceos'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

bootJar {
    dependsOn asciidoctor
    copy {
        from "${asciidoctor.outputDir}"
        into 'BOOT-INF/classes/static/docs'
    }
}

dependencies {
    // Spring Boot Data JPA for database access
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Spring Boot Web for creating web applications
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // MySQL Connector/J for connecting to MySQL databases
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Spring Boot Starter Test for testing Spring Boot applications
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // JUnit Platform Launcher for launching JUnit-based tests
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Spring Security for securing Spring applications
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    //spring security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

    //Oath2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    //spring rest docs
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    //spring health check
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
}

test {
    useJUnitPlatform()
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

asciidoctor.doFirst {
    delete file('src/main/resources/static/docs')
}

task copyDocument(type: Copy) {
    dependsOn asciidoctor
    from file("build/docs/asciidoc")
    into file("src/main/resources/static/docs")
}

build {
    dependsOn copyDocument
}
